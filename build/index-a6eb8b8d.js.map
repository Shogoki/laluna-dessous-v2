{"version":3,"file":"index-a6eb8b8d.js","sources":["../../node_modules/sveltestrap/src/Button.svelte","../../node_modules/sveltestrap/src/Carousel.svelte","../../node_modules/sveltestrap/src/CarouselControl.svelte","../../node_modules/sveltestrap/src/CarouselItem.svelte","../../node_modules/svelte/transition/index.mjs","../../node_modules/sveltestrap/src/Modal.svelte","../../node_modules/sveltestrap/src/ModalBody.svelte","../../node_modules/sveltestrap/src/ModalFooter.svelte","../../node_modules/sveltestrap/src/ModalHeader.svelte","../../src/components/InfoIconBox.svelte","../../src/components/AboutUs.svelte","../../src/components/Aktuelles.svelte","../../src/components/Carousel.svelte","../../src/pages/index.svelte"],"sourcesContent":["<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let active = false;\n  export let block = false;\n  export let children = undefined;\n  export let close = false;\n  export let color = 'secondary';\n  export let disabled = false;\n  export let href = '';\n  export let outline = false;\n  export let size = null;\n  export let style = '';\n  export let value = '';\n\n  $: ariaLabel = $$props['aria-label'];\n\n  $: classes = classnames(\n    className,\n    close ? 'btn-close' : 'btn',\n    close || `btn${outline ? '-outline' : ''}-${color}`,\n    size ? `btn-${size}` : false,\n    block ? 'd-block w-100' : false,\n    { active }\n  );\n\n  $: defaultAriaLabel = close ? 'Close' : null;\n</script>\n\n{#if href}\n  <a\n    {...$$restProps}\n    class={classes}\n    {disabled}\n    on:click\n    {href}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}>\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </a>\n{:else}\n  <button\n    {...$$restProps}\n    class={classes}\n    {disabled}\n    on:click\n    {value}\n    aria-label={ariaLabel || defaultAriaLabel}\n    {style}>\n    <slot>\n      {#if children}\n        {children}\n      {:else}\n        <slot />\n      {/if}\n    </slot>\n  </button>\n{/if}\n","<script>\n  import { onDestroy, onMount } from 'svelte';\n  import classnames from './utils';\n  import { getNewCarouselActiveIndex, browserEvent } from './utils';\n\n  let classes = '';\n  let className = '';\n  export { className as class };\n  export let style = '';\n  export let items = [];\n  export let activeIndex = 0;\n  export let dark = false;\n  export let ride = true;\n  export let interval = 5000;\n  export let pause = true;\n  export let keyboard = true;\n  let _rideTimeoutId = false;\n  let _removeVisibilityChangeListener = false;\n\n  $: classes = classnames(\n    className,\n    'carousel',\n    'slide',\n    { 'carousel-dark': dark }\n  );\n\n  onMount(() => {\n    setRideTimeout();\n\n    _removeVisibilityChangeListener = browserEvent(\n      document,\n      'visibilitychange',\n      () => {\n        if (document.visibilityState === 'hidden') {\n          clearRideTimeout();\n        } else {\n          setRideTimeout();\n        }\n      }\n    );\n  });\n\n  onDestroy(() => {\n    if (_rideTimeoutId) {\n      clearTimeout(_rideTimeoutId);\n    }\n\n    if (_removeVisibilityChangeListener) {\n      _removeVisibilityChangeListener();\n    }\n  });\n\n  function handleKeydown(event) {\n    if (!keyboard) {\n      return;\n    }\n\n    let direction = '';\n\n    if (event.key === 'ArrowLeft') {\n      direction = 'prev';\n    } else if (event.key === 'ArrowRight') {\n      direction = 'next';\n    } else {\n      return;\n    }\n\n    activeIndex = getNewCarouselActiveIndex(direction, items, activeIndex);\n  }\n\n  function setRideTimeout() {\n    clearRideTimeout();\n\n    if (ride) {\n      _rideTimeoutId = setTimeout(autoNext, interval);\n    }\n  }\n\n  function clearRideTimeout() {\n    if (_rideTimeoutId) {\n      clearTimeout(_rideTimeoutId);\n    }\n  }\n\n  function autoNext() {\n    activeIndex = getNewCarouselActiveIndex('next', items, activeIndex);\n  }\n</script>\n\n<svelte:window on:keydown={handleKeydown} />\n\n<div\n  {...$$restProps}\n  class={classes}\n  {style}\n  on:mouseenter={() => (pause ? clearRideTimeout() : undefined)}\n  on:mouseleave={() => (pause ? setRideTimeout() : undefined)}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n  import { getNewCarouselActiveIndex } from './utils';\n\n  let classes = '';\n  let className = '';\n  let srText = '';\n  export { className as class };\n  export let direction = '';\n  export let directionText = '';\n  export let activeIndex = 0;\n  export let items = [];\n  export let wrap = true;\n\n  $: classes = classnames(`carousel-control-${direction}`, className);\n\n  const getSrText = (direction) => {\n    if (direction === 'next') {\n      return 'Next';\n    } else if (direction === 'prev') {\n      return 'Previous';\n    }\n  };\n\n  $: srText = directionText ? directionText : getSrText(direction);\n\n  function clickHandler() {\n    const endOrBeginning =\n      (direction === 'next' && activeIndex + 1 > items.length - 1) ||\n      (direction === 'previous' && activeIndex - 1 < 0);\n\n    if (!wrap && endOrBeginning) {\n      return;\n    }\n\n    activeIndex = getNewCarouselActiveIndex(direction, items, activeIndex);\n  }\n</script>\n\n<a\n  {...$$restProps}\n  class={classes}\n  role=\"button\"\n  href=\"#{direction}\"\n  on:click|preventDefault={clickHandler}>\n  <span class=\"carousel-control-{direction}-icon\" aria-hidden=\"true\" />\n  <span class=\"visually-hidden\">{srText}</span>\n</a>\n","<script>\n  import classnames from './utils';\n\n  let classes = '';\n  let className = '';\n  export let itemIndex = 0;\n  export let activeIndex = 0;\n  export { className as class };\n\n  $: classes = classnames(className, 'carousel-item');\n</script>\n\n<div\n  {...$$restProps}\n  class=\"{classes} active\"\n  class:active={itemIndex === activeIndex}>\n  <slot />\n</div>\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script context=\"module\">\n  // TODO fade option\n  let openCount = 0;\n</script>\n\n<script>\n  import classnames from './utils';\n  import { browserEvent } from './utils';\n  import { onDestroy, onMount, afterUpdate } from 'svelte';\n  import { fade as fadeTransition } from 'svelte/transition';\n\n  import {\n    conditionallyUpdateScrollbar,\n    getOriginalBodyPadding,\n    setScrollbarWidth\n  } from './utils';\n\n  function noop() {}\n\n  let className = '';\n  export { className as class };\n  export let isOpen = false;\n  export let autoFocus = true;\n  export let centered = false;\n  export let backdropDuration = 0;\n  export let fullscreen = false;\n  export let scrollable = false;\n  export let size = '';\n  export let toggle = undefined;\n  export let labelledBy = '';\n  export let backdrop = true;\n  export let onEnter = undefined;\n  export let onExit = undefined;\n  export let onOpened = noop;\n  export let onClosed = noop;\n  export let wrapClassName = '';\n  export let modalClassName = '';\n  export let backdropClassName = '';\n  export let contentClassName = '';\n  export let fade = true;\n  export let zIndex = 1050;\n  export let unmountOnClose = true;\n  export let returnFocusAfterClose = true;\n  export let transitionType = fadeTransition;\n  export let transitionOptions = {};\n\n  let hasOpened = false;\n  let _isMounted = false;\n  let _triggeringElement;\n  let _originalBodyPadding;\n  let _lastIsOpen = isOpen;\n  let _lastHasOpened = hasOpened;\n  let _dialog;\n  let _mouseDownElement;\n  let _removeEscListener;\n\n  onMount(() => {\n    if (isOpen) {\n      init();\n      hasOpened = true;\n    }\n\n    if (typeof onEnter === 'function') {\n      onEnter();\n    }\n\n    if (hasOpened && autoFocus) {\n      setFocus();\n    }\n  });\n\n  onDestroy(() => {\n    if (typeof onExit === 'function') {\n      onExit();\n    }\n\n    destroy();\n    if (hasOpened) {\n      close();\n    }\n  });\n\n  afterUpdate(() => {\n    if (isOpen && !_lastIsOpen) {\n      init();\n      hasOpened = true;\n    }\n\n    if (autoFocus && hasOpened && !_lastHasOpened) {\n      setFocus();\n    }\n\n    _lastIsOpen = isOpen;\n    _lastHasOpened = hasOpened;\n  });\n\n  function setFocus() {\n    if (\n      _dialog &&\n      _dialog.parentNode &&\n      typeof _dialog.parentNode.focus === 'function'\n    ) {\n      _dialog.parentNode.focus();\n    }\n  }\n\n  function init() {\n    try {\n      _triggeringElement = document.activeElement;\n    } catch (err) {\n      _triggeringElement = null;\n    }\n\n    _originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n    if (openCount === 0) {\n      document.body.className = classnames(\n        document.body.className,\n        'modal-open'\n      );\n    }\n\n    ++openCount;\n    _isMounted = true;\n  }\n\n  function manageFocusAfterClose() {\n    if (_triggeringElement) {\n      if (\n        typeof _triggeringElement.focus === 'function' &&\n        returnFocusAfterClose\n      ) {\n        _triggeringElement.focus();\n      }\n\n      _triggeringElement = null;\n    }\n  }\n\n  function destroy() {\n    manageFocusAfterClose();\n  }\n\n  function close() {\n    if (openCount <= 1) {\n      const modalOpenClassName = 'modal-open';\n      const modalOpenClassNameRegex = new RegExp(\n        `(^| )${modalOpenClassName}( |$)`\n      );\n      document.body.className = document.body.className\n        .replace(modalOpenClassNameRegex, ' ')\n        .trim();\n    }\n\n    manageFocusAfterClose();\n    openCount = Math.max(0, openCount - 1);\n\n    setScrollbarWidth(_originalBodyPadding);\n  }\n\n  function handleBackdropClick(e) {\n    if (e.target === _mouseDownElement) {\n      e.stopPropagation();\n      if (!isOpen || !backdrop) {\n        return;\n      }\n\n      const backdropElem = _dialog ? _dialog.parentNode : null;\n      if (backdropElem && e.target === backdropElem && toggle) {\n        toggle(e);\n      }\n    }\n  }\n\n  function onModalOpened() {\n    _removeEscListener = browserEvent(document, 'keydown', (event) => {\n      if (event.key && event.key === 'Escape') {\n        toggle(event);\n      }\n    });\n\n    onOpened();\n  }\n\n  function onModalClosed() {\n    onClosed();\n\n    if (_removeEscListener) {\n      _removeEscListener();\n    }\n\n    if (unmountOnClose) {\n      destroy();\n    }\n    close();\n    if (_isMounted) {\n      hasOpened = false;\n    }\n    _isMounted = false;\n  }\n\n  function handleBackdropMouseDown(e) {\n    _mouseDownElement = e.target;\n  }\n\n  const dialogBaseClass = 'modal-dialog';\n\n  $: classes = classnames(dialogBaseClass, className, {\n    [`modal-${size}`]: size,\n    'modal-fullscreen': fullscreen === true,\n    [`modal-fullscreen-${fullscreen}-down`]: fullscreen && (typeof fullscreen === 'string'),\n    [`${dialogBaseClass}-centered`]: centered,\n    [`${dialogBaseClass}-scrollable`]: scrollable\n  });\n</script>\n\n{#if _isMounted}\n  <div\n    {...$$restProps}\n    class={wrapClassName}\n    tabindex=\"-1\"\n    style=\"position: relative; z-index: {zIndex}\">\n    {#if isOpen}\n      <div\n        transition:transitionType={transitionOptions}\n        ariaLabelledby={labelledBy}\n        class={classnames('modal', 'show', modalClassName)}\n        role=\"dialog\"\n        style=\"display: block;\"\n        on:introend={onModalOpened}\n        on:outroend={onModalClosed}\n        on:click={handleBackdropClick}\n        on:mousedown={handleBackdropMouseDown}>\n        <div class={classes} role=\"document\" bind:this={_dialog}>\n          <div class={classnames('modal-content', contentClassName)}>\n            <slot name=\"external\" />\n            <slot />\n          </div>\n        </div>\n      </div>\n      <div\n        transition:fadeTransition={{ duration: fade && backdropDuration }}\n        class={classnames('modal-backdrop', 'show', backdropClassName)} />\n    {/if}\n  </div>\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'modal-body');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'modal-footer');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let toggle = undefined;\n  export let closeAriaLabel = 'Close';\n  export let children = undefined;\n\n  $: classes = classnames(className, 'modal-header');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <h5 class=\"modal-title\">\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </h5>\n  <slot name=\"close\">\n    {#if typeof toggle === 'function'}\n      <button\n        type=\"button\"\n        on:click={toggle}\n        class=\"btn-close\"\n        aria-label={closeAriaLabel} />\n    {/if}\n  </slot>\n</div>\n","<script>\nimport {\n    Row, \n    Container,\n    Col,\n   Button,\n   Modal,\n   ModalBody,\n   ModalFooter,\n   ModalHeader\n } from '../sveltestrap';\n let open = false;\n const toggle = () => (open = !open);\n\n export let title = \"TITLE\";\n export let iconName = \"house-user\"\n export let content = \"\"\n $: fullIconName = `fa-${iconName}`;\n</script>\n<style>\n.circle-icon {\n   background: #6bccff;;\n   padding:30px;\n   border-radius: 50%;\n}\n\n.info-icon {\n   cursor: pointer;\n}\n.outer-grid {\n    display:grid;\n    grid-template-rows: 1fr auto;\n    justify-items: center;\n}\n</style>\n\n<div class=\"outer-grid\">\n<div class=\"info-icon\" on:click={toggle}>\n    <i class=\"fas {fullIconName} fa-10x circle-icon\"></i>\n</div>\n<div>\n    <h2>{title}</h2>\n</div>\n</div>\n\n<Modal isOpen={open} {toggle}>\n    <ModalHeader {toggle}> {title}</ModalHeader>\n    <ModalBody>\n    {@html content}\n    </ModalBody>\n    <ModalFooter>\n      <Button color=\"primary\" on:click={toggle}>OK</Button>\n    </ModalFooter>\n  </Modal>","<script>\n    import {Container, Row, Col} from \"../sveltestrap\"\n    import { getAboutUs} from \"../api/wordpress.js\"\n    import InfoIconBox from \"./InfoIconBox.svelte\"\n    import Loading from \"./Loading.svelte\"\n\n    export let items = getAboutUs() // TODO: WP CUstom Post Types for iconName\n</script>\n<style>\n    h2 { text-align: center}\n</style>\n<section id=\"aboutus\">\n    <Container>\n        <Row>\n            <Col />\n                <Col>\n            <h2>Über uns</h2>\n                </Col>\n            <Col />\n        </Row>\n        <Row>\n            {#await items}\n                <Loading />\n            {:then _items } \n                {#each _items as item}\n                <Col>\n                    <InfoIconBox {...item} ></InfoIconBox>\n                </Col>\n                {/each}\n            {:catch}\n            Oops, Da ist was schief gelaufen.\n            {/await}\n        </Row>\n    </Container>\n               \n            \n</section>","<script lang=\"ts\">\n    import { getPosts, getPageBySlug} from \"../api/wordpress\"\n    import PageSection from \"./PageSection.svelte\"\n    async function getLatestPost () {\n        const posts = await getPosts(1)\n        return posts[0]\n    }\n    async function getPostPage() {\n        const page = await getPageBySlug(\"aktuelles\")\n        console.log(\"Page\", page)\n        return page\n    }\n    const postsP = getLatestPost()\n    const pageP = getPostPage()\n</script>\n{#await postsP}\nLoading...\n{:then post}\n{#await pageP}\nLoading...\n{:then page}\n\n<PageSection {page} light={true} >\n     <div class=\"row\">\n        <div class=\"col-lg-8 mx-auto\">\n        <h2>{post.title.rendered}</h2>\n        <p class=\"lead\">\n            {@html post.content.rendered}\n        </p>\n        </div>\n    </div>\n    <a href=\"/aktuelles\" >weitere Beiträge</a>\n</PageSection>\n{:catch e} \n{e}\n{/await}\n{/await}","<script lang=\"ts\">\n    import { Carousel, CarouselControl, CarouselItem , Container, Row, Col} from '../sveltestrap';\n    import {getCarouselImages} from \"../api/wordpress\"\n    async function getImageUrls() {\n      const items = await getCarouselImages()\n      return   items.map(item => item.image) \n    }\n    const itemsP = getImageUrls()\n    let activeIndex = 0;\n  </script>\n  <style>\n   :global(.carousel-item) {\n    max-height: 60vh;\n}\n :global(.carousel-item img) {\n    max-height: 60vh;\n}\n  </style>\n  <section id=\"carousel\">\n<Container fluid>\n  {#await itemsP}\n  Loading..\n   {:then items}\n  <Carousel {items} bind:activeIndex>\n    <div class=\"carousel-inner\">\n      {#each items as item, index}\n        <CarouselItem bind:activeIndex itemIndex={index}>\n          <img src={item} class=\"d-block w-100\" alt={`${item} ${index + 1}`} />\n        </CarouselItem>\n      {/each}\n    </div>\n  \n    <CarouselControl direction=\"prev\" bind:activeIndex {items} />\n    <CarouselControl direction=\"next\" bind:activeIndex {items} />\n  </Carousel>\n  {/await}\n</Container>\n</section>\n  ","<script >\n    \n    import PageSection from \"../components/PageSection.svelte\"\n    import AboutUs from \"../components/AboutUs.svelte\"\n    import Aktuelles from \"../components/Aktuelles.svelte\"\n    import { getPages} from \"../api/wordpress\"\n    import { getPageBySlug} from \"../api/wordpress\"\nimport Carousel from \"../components/Carousel.svelte\";\n    \n    async function getMainPages() {\n        const pages = await getPages()\n        return pages.filter(page => page.acf.scrollablepage)\n    }\n    async function getWelcomePage() {\n      const page = await getPageBySlug(\"willkommen\")\n      return page;\n    }\n    const welcomeP = getWelcomePage()\n    const pagesP = getMainPages()\n    \n    </script>\n    \n    \n    <style>\n    \n    </style>\n    \n    <main>\n    <Carousel></Carousel>\n     {#await welcomeP}\n    Loading\n    {:then welcome}\n      <PageSection page={welcome} light={true} />\n    {/await}\n    <AboutUs />\n    <Aktuelles />\n    {#await pagesP}\n    Loading\n    {:then pages}\n        {#each pages as page, idx}\n             <PageSection {page} light={idx % 2 === 1} />\n        {/each}\n    {/await}\n    \n    </main>\n\n    "],"names":["ctx","className","active","block","children","close","color","disabled","href","outline","size","style","value","ariaLabel","$$props","classes","classnames","defaultAriaLabel","items","activeIndex","dark","ride","interval","pause","keyboard","_rideTimeoutId","_removeVisibilityChangeListener","setRideTimeout","clearRideTimeout","setTimeout","autoNext","clearTimeout","getNewCarouselActiveIndex","onMount","browserEvent","document","visibilityState","onDestroy","carousel-dark","event","direction","key","undefined","srText","directionText","wrap","getSrText","endOrBeginning","length","itemIndex","fade","node","delay","duration","easing","linear","o","getComputedStyle","opacity","css","t","openCount","noop","_triggeringElement","_originalBodyPadding","_dialog","_mouseDownElement","_removeEscListener","isOpen","autoFocus","centered","backdropDuration","fullscreen","scrollable","toggle","labelledBy","backdrop","onEnter","onExit","onOpened","onClosed","wrapClassName","modalClassName","backdropClassName","contentClassName","zIndex","unmountOnClose","returnFocusAfterClose","transitionType","fadeTransition","transitionOptions","hasOpened","_isMounted","_lastIsOpen","_lastHasOpened","setFocus","parentNode","focus","init","activeElement","err","getOriginalBodyPadding","conditionallyUpdateScrollbar","body","manageFocusAfterClose","destroy","modalOpenClassNameRegex","RegExp","replace","trim","Math","max","setScrollbarWidth","afterUpdate","modal-fullscreen","e","target","stopPropagation","backdropElem","closeAriaLabel","open","title","iconName","content","fullIconName","getAboutUs","rendered","__awaiter","this","thisArg","_arguments","P","generator","getPosts","getLatestPost","page","getPageBySlug","console","log","getPostPage","itemsP","getCarouselImages","map","item","image","getImageUrls","getWelcomePage","getPages","filter","acf","scrollablepage","getMainPages"],"mappings":"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"}